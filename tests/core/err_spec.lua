local err = require('vgit.core.err')

describe('err', function()
  describe('assert', function()
    it('should not throw error if conditions are met', function()
      err.assert(true)
    end)
    it('should throw error if conditions are not met', function()
      assert.has_error(function()
        err.assert(false)
      end)
    end)
  end)

  describe('assert_type', function()
    it('should throw an error if value is not of a certain type', function()
      assert.has_error(function()
        err.assert_type(3, 'string')
        err.assert_type(3, 'function')
        err.assert_type('foo', 'number')
      end)
    end)
    it('should not throw an error if value is of a certain type', function()
      err.assert_type(3, 'number')
      err.assert_type(function() end, 'function')
    end)
  end)

  describe('assert_number', function()
    it('should throw an error if value is not a number', function()
      assert.has_error(function()
        err.assert_number('foo')
      end)
    end)
    it('should not throw an error if value is not a number', function()
      err.assert_number(3)
    end)
  end)

  describe('assert_string', function()
    it('should throw an error if value is not a string', function()
      assert.has_error(function()
        err.assert_string(3)
      end)
    end)
    it('should not throw an error if value is not a string', function()
      err.assert_string('foo')
    end)
  end)

  describe('assert_function', function()
    it('should throw an error if value is not a function', function()
      assert.has_error(function()
        err.assert_function(3)
      end)
    end)
    it('should not throw an error if value is not a function', function()
      err.assert_function(function() end)
    end)
  end)

  describe('assert_boolean', function()
    it('should throw an error if value is not a booean', function()
      assert.has_error(function()
        err.assert_boolean(3)
      end)
    end)
    it('should not throw an error if value is not a bolean', function()
      err.assert_boolean(true)
    end)
  end)

  describe('assert_nil', function()
    it('should throw an error if value is not a nil', function()
      assert.has_error(function()
        err.assert_nil(3)
      end)
    end)
    it('should not throw an error if value is not a nil', function()
      err.assert_nil(nil)
    end)
  end)

  describe('assert_table', function()
    it('should throw an error if value is not a table', function()
      assert.has_error(function()
        err.assert_table(3)
      end)
    end)
    it('should not throw an error if value is not a table', function()
      err.assert_table({})
    end)
  end)

  describe('assert_list', function()
    it('should throw an error if value is not a table', function()
      assert.has_error(function()
        err.assert_list({ hello = 'world' })
      end)
    end)
    it('should not throw an error if value is not a table', function()
      err.assert_list({ 1, 2, 3, 4 })
    end)
  end)
end)
